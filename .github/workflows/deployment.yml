name: 'Deployment Pipeline for Schedule'
on:
  pull_request:
    types: [opened,labeled,closed]

jobs:
  build:
    if: ${{ github.event.action == 'opened' || ( github.event.action == 'labeled' && github.event.label.name == 'deploy' ) }}
    name: 'Deploy Pull Request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Wait on checks for ci.yml
      - name: Wait for "Static checks" to succeed
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          check-name: 'Static checks (PHP7.3, Symfony ^4.4)'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20

      # Wait on checks for ci.yml
      - name: Wait for "Test application" to succeed
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          check-name: 'Test application'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20

      - name: greet
        id: greet
        run: |
          echo "environment is ${GITHUB_REF##*/}"
          echo "boolean is ${{ github.event.inputs.boolean }}"
          # echo "choice is on ${{ github.event.inputs.choice }}"
          # echo ::set-output name=exit_code::$?

      - name: initial labeling after success
        if: ${{ success() && steps.greet.outcome == 'success' }}
        # if: ${{ github.event.label.name == 'deploy' || github.event.pull_request.conclusion == 'success' }}
        uses: andymckay/labeler@master
        with:
          add-labels: "deployed-successfully"
          remove-labels: "deploy"

      - name: initial labeling after failed
        if: ${{ failure() && steps.greet.outcome == 'failure' }}
        # if: ${{ github.event.label.name == 'deploy' || steps.build.outputs.exit_code == 0 }}
        uses: andymckay/labeler@master
        with:
          add-labels: "deployment-failed"
          remove-labels: "deploy"

  Cleanup:
    name: 'Cleanup Pull Request'
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'closed' }}
    steps:
      - uses: actions/checkout@v2

      - name: greet
        run: |
          echo "environment is ${GITHUB_REF##*/}"
          echo "boolean is ${{ github.event.inputs.boolean }}"
          # echo "choice is on ${{ github.event.inputs.choice }}"