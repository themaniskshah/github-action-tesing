name: PR Checker and Slack Notifier

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options: [dev, pre-release, prod]

      run_backup_db:
        description: 'Backup database?'
        required: false
        type: boolean
        default: false

      run_restore_db:
        description: 'Restore database?'
        required: false
        type: boolean
        default: false

      application_name:
        description: 'Select Application'
        required: true
        type: choice
        options:
          -
          - powerbi
          - tableau
  schedule:
    - cron: '3 * * * *' # Database: Backup, Test (Pre-release)

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      ENV_NAME: ${{ steps.setenv.outputs.ENV_NAME }}
    steps:
      - id: setenv
        env:
          DISPATCH_ENV: ${{ github.event.inputs.environment || '' }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_BASE_REF_NAME: ${{ github.base_ref }}
          GITHUB_EVENT_SCHEDULE: ${{ github.event.schedule || '' }}
        run: |
          echo "Determining environment and image name..."
          if [[ "$GITHUB_EVENT_NAME" == "schedule" && "$GITHUB_EVENT_SCHEDULE" == "30 01 * * *" ]]; then
            ENV_NAME="pre-release"
          elif [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
            ENV_NAME="$DISPATCH_ENV"
          elif [[ "$GITHUB_BASE_REF_NAME" == "pre-release" || "$GITHUB_REF_NAME" == "pre-release" ]]; then
            ENV_NAME=pre-release
          elif [[ "$GITHUB_REF" == refs/tags/* || "$GITHUB_BASE_REF_NAME" == "master" || "$GITHUB_REF_NAME" == "master" ]]; then
            ENV_NAME=prod
          else
            ENV_NAME=pre-release
          fi
          echo "ENV_NAME=$ENV_NAME"
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_OUTPUT

  pr_checker:
    runs-on: ubuntu-latest
    needs: set-environment
    if: |
      (github.event_name == 'schedule' && contains(fromJSON('["3 * * * *"]'), github.event.schedule)) ||
      (github.event_name == 'workflow_dispatch' && contains(fromJSON('["dev","pre-release"]'), inputs.environment) &&
        inputs.run_backup_db && contains(fromJSON('["powerbi","tableau"]'), inputs.application_name))
    steps:
    - name: ${{ inputs.application_name }}-${{ needs.set-environment.outputs.ENV_NAME }}
      env:
        APP_NAME: ${{ inputs.restore_app }}
      id: check_prs
      run: |
        echo $APP_NAME
        ORGANIZATION="clouddrove"
        GITHUB_TOKEN="${{ secrets.TOKEN }}"
        
        PR_LIST=$(gh api "/orgs/$ORGANIZATION/repos" -q ".[].pulls_url" | xargs -I % gh api % -q ".[].html_url")

        echo "::set-output name=pr_list::$PR_LIST"

    - name: Send PR URLs to Slack
      id: send_to_slack
      run: |
         echo $environment=${{ needs.set-environment.outputs.ENV_NAME }}

  a:
    runs-on: ubuntu-latest
    if: ${{ contains(fromJSON('["dev","pre-release"]'), inputs.environment) }}
    steps:
      - run: echo "Deploy A to ${{ inputs.environment }}"
  
  b:
    runs-on: ubuntu-latest
    if: ${{ contains(fromJSON('["dev","pre-release"]'), inputs.environment) }}
    steps:
      - run: echo "Deploy B to ${{ inputs.environment }}"
  
  db_dump:
    runs-on: ubuntu-latest
    if: ${{ contains(fromJSON('["dev","pre-release"]'), inputs.environment) && inputs.run_db_dump }}
    steps:
      - run: echo "DB dump for ${{ inputs.environment }}"

  certbot:
    runs-on: ubuntu-latest
    if: ${{ contains(fromJSON('["dev","pre-release"]'), inputs.environment) && inputs.run_certbot }}
    steps:
      - run: echo "Certbot for ${{ inputs.environment }}"
