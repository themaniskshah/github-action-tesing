name: PR Checker and Slack Notifier

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (dev, pre-release, or prod)"
        required: true
        type: choice
        options:
          - dev
          - pre-release
          - prod
      run_db_dump:
        description: "Run DB dump?"
        required: false
        type: boolean
        default: false
      run_customerio:
        description: "Run Customerio?"
        required: false
        type: boolean
        default: false
      run_certbot:
        description: "Run Certbot?"
        required: false
        type: boolean
        default: false
      run_initial:
        description: "Run Initial?"
        required: false
        type: boolean
        default: false

      db-restore:
        description: "Select DB restore app name"
        required: true
        type: choice
        options:
          - powerbi
          - tableau

jobs:
  pr_checker:
    runs-on: ubuntu-latest

    steps:
    - name: Check Pull Requests
      id: check_prs
      run: |
        ORGANIZATION="clouddrove"
        GITHUB_TOKEN="${{ secrets.TOKEN }}"
        
        PR_LIST=$(gh api "/orgs/$ORGANIZATION/repos" -q ".[].pulls_url" | xargs -I % gh api % -q ".[].html_url")

        echo "::set-output name=pr_list::$PR_LIST"

    - name: Send PR URLs to Slack
      id: send_to_slack
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        PR_LIST="${{ steps.check_prs.outputs.pr_list }}"
        SLACK_MESSAGE="Here are the latest Pull Requests in the organization:\n\n$PR_LIST"
        
        curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"$SLACK_MESSAGE\"}" $SLACK_WEBHOOK_URL

  a:
    runs-on: ubuntu-latest
    if: ${{ contains(fromJSON('["dev","pre-release"]'), inputs.environment) }}
    steps:
      - run: echo "Deploy A to ${{ inputs.environment }}"
  
  b:
    runs-on: ubuntu-latest
    if: ${{ contains(fromJSON('["dev","pre-release"]'), inputs.environment) }}
    steps:
      - run: echo "Deploy B to ${{ inputs.environment }}"
  
  db_dump:
    runs-on: ubuntu-latest
    if: ${{ contains(fromJSON('["dev","pre-release"]'), inputs.environment) && inputs.run_db_dump }}
    steps:
      - run: echo "DB dump for ${{ inputs.environment }}"

  certbot:
    runs-on: ubuntu-latest
    if: ${{ contains(fromJSON('["dev","pre-release"]'), inputs.environment) && inputs.run_certbot }}
    steps:
      - run: echo "Certbot for ${{ inputs.environment }}"
